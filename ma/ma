#!/bin/bash

DATA_DIR="$HOME/.bin/data"
DATA_FILE="$DATA_DIR/ma.toml"

mkdir -p "$DATA_DIR"
touch "$DATA_FILE"

declare -A COMMANDS

# === Load commands from TOML ===
while IFS="=" read -r k v; do
    [[ "$k" =~ ^[[:space:]]*# ]] && continue   # skip comments
    [[ -z "$k" ]] && continue                  # skip empty lines
    k=$(echo "$k" | xargs)                     # trim
    v=$(echo "$v" | xargs)                     # trim
    COMMANDS["$k"]="$v"
done < "$DATA_FILE"

# === Functions ===
show_help() {
    echo "Usage: ma <command> [args]"
    echo
    echo "Available commands:"
    if [ ${#COMMANDS[@]} -eq 0 ]; then
        echo "  (none defined yet â€” use 'ma set')"
    else
        for cmd in "${!COMMANDS[@]}"; do
            printf "  %-12s %s\n" "$cmd" "${COMMANDS[$cmd]}"
        done
    fi
    echo
    echo "Special commands:"
    echo "  ma set <name> <command>    # add or overwrite a shortcut"
    echo "  ma del <name>              # delete a shortcut"
    echo "  ma list                    # show all commands"
    echo "  ma help                    # show this menu"
}

save_command() {
    local name="$1"
    local cmd="$2"
    # remove old entry if it exists
    grep -v "^$name\s*=" "$DATA_FILE" > "$DATA_FILE.tmp" && mv "$DATA_FILE.tmp" "$DATA_FILE"
    # add new entry
    echo "$name = \"$cmd\"" >> "$DATA_FILE"
}

delete_command() {
    local name="$1"
    grep -v "^$name\s*=" "$DATA_FILE" > "$DATA_FILE.tmp" && mv "$DATA_FILE.tmp" "$DATA_FILE"
}

# === Main logic ===
case "$1" in
    help|"")
        show_help
        ;;

    set)
        if [ -n "$2" ] && [ -n "$3" ]; then
            save_command "$2" "${*:3}"
            echo "Saved: $2 = ${*:3}"
        else
            echo "Usage: ma set <name> <command>"
        fi
        ;;

    del)
        if [ -n "$2" ]; then
            delete_command "$2"
            echo "Deleted: $2"
        else
            echo "Usage: ma del <name>"
        fi
        ;;

    list)
        cat "$DATA_FILE" || echo "No commands saved."
        ;;

    *)
        if [[ -n "${COMMANDS[$1]}" ]]; then
            eval "${COMMANDS[$1]} ${*:2}"
        else
            echo "Unknown command: $1"
            echo "Use: ma help"
            exit 1
        fi
        ;;
esac

